{"version":3,"sources":["RecipeCreate.js","ColumnHeadings.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","_ref","onCreate","objWithEmptyVals","name","cuisine","photo","ingredients","preparation","formData","setFormData","useState","handleChange","event","value","target","React","createElement","onSubmit","preventDefault","type","placeholder","onChange","ColumnHeadings","keys","map","key","str","charAt","toUpperCase","slice","RecipeList","recipes","onDelete","Object","className","recipe","index","src","alt","concat","onClick","RecipeData","App","setRecipes","prevRecipes","filter","unusedVariable","i","newRecipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd06bbd8.chunk.js","sourcesContent":["// RecipeCreat.js\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nfunction RecipeCreate({ onCreate }) {\r\n\r\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\r\n  // TODO: Add the required input and textarea form elements.\r\n  // TODO: Add the required submit and change handlers\r\n  \r\n  const objWithEmptyVals = {\r\n    name: \"\",\r\n    cuisine: \"\",\r\n    photo: \"\",\r\n    ingredients: \"\",\r\n    preparation: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState(objWithEmptyVals);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onCreate(formData);\r\n    setFormData(objWithEmptyVals); \r\n  };\r\n\r\n  return (\r\n    <form name=\"create\" onSubmit={handleSubmit}>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td><input type=\"text\" name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleChange} /></td>\r\n            <td><input type=\"text\" name=\"cuisine\" placeholder=\"Cuisine\" value={formData.cuisine} onChange={handleChange} /></td>\r\n            <td><input type=\"text\" name=\"photo\" placeholder=\"URL\" value={formData.photo} onChange={handleChange} /></td>\r\n            <td>\r\n              <textarea name=\"ingredients\" placeholder=\"Ingredients\" value={formData.ingredients} onChange={handleChange}></textarea>\r\n            </td>\r\n            <td>\r\n              <textarea name=\"preparation\" placeholder=\"Preparation\" value={formData.preparation} onChange={handleChange}></textarea>\r\n            </td>\r\n            <td>\r\n              <button type=\"submit\">Create</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RecipeCreate;\r\n","// ColumnHeadings.js\r\n\r\n/* This child of `RecipeList.js` returns a JSX structure of capitalized column headings,\r\n   the first five of which are drawn from the keys of the first object in `RecipeData`. */\r\n\r\nimport React from \"react\";\r\n\r\n/* Defined here b/c this is only column heading not drawn from array itself */\r\nconst sixthColumnHeading = \"Actions\";\r\n\r\nfunction ColumnHeadings({ keys }) {\r\n    return (\r\n        <tr>\r\n            {keys.map((key) => (\r\n                <th key={key}>{capitalize(key)}</th>\r\n            ))}\r\n            <th>{sixthColumnHeading}</th>\r\n        </tr>\r\n    );\r\n};\r\n\r\nfunction capitalize(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n};\r\n\r\nexport default ColumnHeadings;","// RecipeList.js\r\n\r\nimport React from \"react\";\r\nimport ColumnHeadings from \"./ColumnHeadings\";\r\n\r\nfunction RecipeList({ recipes, onDelete }) {\r\n  \r\n  // TODO: Display the list of recipes using the structure of table that is provided.\r\n  // TODO: Create at least one additional component that is used by this component.\r\n\r\n  const keys = Object.keys(recipes[0]);\r\n\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      <table>\r\n        <thead>\r\n          <ColumnHeadings keys={keys} />\r\n        </thead>\r\n        <tbody>\r\n          {recipes.map((recipe, index) => (\r\n            <tr key={index}>\r\n              <td>{recipe.name}</td>\r\n              <td>{recipe.cuisine}</td>\r\n              <td><img className=\"recipe-image\" src={recipe.photo} alt={`${recipe.name} recipe`}/></td>\r\n              {/* [structure of next two columns as suggested by example in instructions] */}\r\n              <td className=\"content_td\"><p>{recipe.ingredients}</p></td>\r\n              <td className=\"content_td\"><p>{recipe.preparation}</p></td>\r\n              {/* TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked */}\r\n              <td>\r\n                <button name=\"delete\" onClick={() => onDelete(index)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeList;\r\n\r\n/* What follows is what I replaced with \r\n   `<ColumnHeadings keys={keys} />`\r\n   and the added child component `ColumnHeadings.js`:\r\n\r\n<tr>\r\n  <th>Name</th>\r\n  <th>Cuisine</th>\r\n  <th>Photo</th>\r\n  <th>Ingredients</th>\r\n  <th>Preparation</th>\r\n  <th>Actions</th> \r\n</tr>\r\n\r\n*/","// RecipeData.js\r\n\r\n/**\r\n* This is the data that is initially loaded.\r\n* Please do not modify this file.\r\n*/\r\n\r\nconst RecipeData = [\r\n  {\r\n    name: \"Tuna Poke with Mango\",\r\n    cuisine: \"Hawaiian\",\r\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\r\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\r\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\r\n  },\r\n  {\r\n    name: \"Guacamole\",\r\n    cuisine: \"Mexican\",\r\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\r\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\r\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\r\n  },\r\n];\r\n\r\nexport default RecipeData;","// App.js //\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport RecipeCreate from \"./RecipeCreate\";\r\nimport RecipeList from \"./RecipeList\";\r\nimport RecipeData from \"./RecipeData\"\r\n\r\nfunction App() {\r\n  const [recipes, setRecipes] = useState(RecipeData);\r\n\r\n  // TODO: Add the ability for the <RecipeList /> component to list and delete an existing recipe.\r\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\r\n\r\n  const handleDelete = (index) => {\r\n    setRecipes((prevRecipes) => prevRecipes.filter((unusedVariable, i) => i !== index));\r\n  };\r\n\r\n  const handleCreate = (newRecipe) => {\r\n    setRecipes([...recipes, newRecipe]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header><h1>Delicious Food Recipes</h1></header>\r\n      <RecipeList recipes={recipes} onDelete={handleDelete} />\r\n      <RecipeCreate onCreate={handleCreate} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n/* Former version of function, replaced for concision:\r\n\r\nconst handleDelete = (index) => {\r\n    const updatedRecipes = [...recipes];\r\n    updatedRecipes.splice(index, 1);\r\n    setRecipes(updatedRecipes);\r\n  };\r\n*/","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}